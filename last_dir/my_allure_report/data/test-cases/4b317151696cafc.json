{
  "uid" : "4b317151696cafc",
  "name" : "test_add_into_cart",
  "fullName" : "test_my_allure.Test_Requirement#test_add_into_cart",
  "historyId" : "868ea359662a56a2b8e2148d30343bdb",
  "time" : {
    "start" : 1612168639030,
    "stop" : 1612168639033,
    "duration" : 3
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'success' == 'failure'\n  - failure\n  + success",
  "statusTrace" : "self = <test_my_allure.Test_Requirement object at 0x1088fe310>\n\n    @allure.story(\"加入购物车\")              # 用story说明用户场景，可以理解为JIRA中的Story\n    def test_add_into_cart(self):\n        login(\"Jim\", \"我的密码\")\n        with allure.step(\"浏览商品\"):            # step的参数将会打印到测试报告中\n            allure.attach(\"笔记本\", \"商品A\")     # attach可以打印一些附加信息\n            allure.attach(\"手机\", \"商品B\")\n        with allure.step(\"添加商品购买数量\"):\n            pass\n        with allure.step(\"校验购买数量是否大于库存\"):\n            allure.attach('添加购物车成功', '期望结果')\n            allure.attach('添加购物车失败', '实际结果')\n>           assert \"success\" == \"failure\"\nE           AssertionError: assert 'success' == 'failure'\nE             - failure\nE             + success\n\ntest_pytest/test_my_allure.py:19: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'success' == 'failure'\n  - failure\n  + success",
    "statusTrace" : "self = <test_my_allure.Test_Requirement object at 0x1088fe310>\n\n    @allure.story(\"加入购物车\")              # 用story说明用户场景，可以理解为JIRA中的Story\n    def test_add_into_cart(self):\n        login(\"Jim\", \"我的密码\")\n        with allure.step(\"浏览商品\"):            # step的参数将会打印到测试报告中\n            allure.attach(\"笔记本\", \"商品A\")     # attach可以打印一些附加信息\n            allure.attach(\"手机\", \"商品B\")\n        with allure.step(\"添加商品购买数量\"):\n            pass\n        with allure.step(\"校验购买数量是否大于库存\"):\n            allure.attach('添加购物车成功', '期望结果')\n            allure.attach('添加购物车失败', '实际结果')\n>           assert \"success\" == \"failure\"\nE           AssertionError: assert 'success' == 'failure'\nE             - failure\nE             + success\n\ntest_pytest/test_my_allure.py:19: AssertionError",
    "steps" : [ {
      "name" : "用户登录操作",
      "time" : {
        "start" : 1612168639031,
        "stop" : 1612168639031,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user",
        "value" : "'Jim'"
      }, {
        "name" : "pwd",
        "value" : "'我的密码'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "浏览商品",
      "time" : {
        "start" : 1612168639031,
        "stop" : 1612168639031,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "6d915a5916e2972e",
        "name" : "商品A",
        "source" : "6d915a5916e2972e.attach",
        "type" : "text/plain",
        "size" : 9
      }, {
        "uid" : "245765730e919bd4",
        "name" : "商品B",
        "source" : "245765730e919bd4.attach",
        "type" : "text/plain",
        "size" : 6
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "添加商品购买数量",
      "time" : {
        "start" : 1612168639031,
        "stop" : 1612168639031,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "校验购买数量是否大于库存",
      "time" : {
        "start" : 1612168639031,
        "stop" : 1612168639033,
        "duration" : 2
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 'success' == 'failure'\n  - failure\n  + success\n",
      "statusTrace" : "  File \"/Users/qianchao/Downloads/pyy/aaa/test_pytest/test_my_allure.py\", line 19, in test_add_into_cart\n    assert \"success\" == \"failure\"\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "94b95112ea15988a",
        "name" : "期望结果",
        "source" : "94b95112ea15988a.attach",
        "type" : "text/plain",
        "size" : 21
      }, {
        "uid" : "f49b5c847af739c6",
        "name" : "实际结果",
        "source" : "f49b5c847af739c6.attach",
        "type" : "text/plain",
        "size" : 21
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "需要做的一个大需求名称"
  }, {
    "name" : "story",
    "value" : "加入购物车"
  }, {
    "name" : "suite",
    "value" : "test_my_allure"
  }, {
    "name" : "subSuite",
    "value" : "Test_Requirement"
  }, {
    "name" : "host",
    "value" : "qianchaodeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "17482-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_my_allure"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4b317151696cafc.json",
  "parameterValues" : [ ]
}